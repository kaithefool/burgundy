#!/usr/bin/env node

const { nanoid } = require('nanoid');
const fs = require('fs');
const path = require('path');

const { name } = require('../../package.json');

const envDirPath = path.resolve(__dirname, '../../private');
const envPath = path.resolve(envDirPath, '.env');

if (fs.existsSync(envPath)) {
  process.exit(0);
}

const template = () => `
ROOT=http://localhost:3000
PORT=3000
SECRET=${nanoid(32)}
HTTPS=0

ACCESSLOG_TTL=180d

JWT_ACCESS_TTL=5m
JWT_REFRESH_TTL=15d
RESET_PWD_MAX_TIMES=3
RESET_PWD_KEY_TTL=60m
OTP_EMAIL_TTL=60m
OTP_EMAIL_MAX=3
OTP_SMS_TTL=15m
OTP_SMS_MAX=3

FILE_STORAGE_UPLOADS=public/uploads
FILE_STORAGE_TRASH=private/trash
FILE_STORAGE_LOCALES=public/locales

MONGO_URI=mongodb://localhost:27017/${name}
MONGO_SYNC_INDEX=0

REDIS_URL=

SOCKET=

MAIL_HOST=
MAIL_PORT=
MAIL_USER=
MAIL_PASSWORD=
MAIL_DEFAULT_SENDER=

SMS_ACC_SID=
SMS_AUTH_TOKEN=
SMS_FROM_NO=

LNG=en,zh-hant
LNG_LABEL=EN,ä¸­æ–‡
LNG_FLAG=ðŸ‡¬ðŸ‡§,ðŸ‡­ðŸ‡°

GOOGLE_API_KEY=
GOOGLE_RECAPTCHA_PUBIC_KEY=
GOOGLE_RECAPTCHA_SECRET_KEY=
`;

fs.mkdirSync(envDirPath, { recursive: true });
fs.writeFileSync(envPath, template());

console.info('Environment file generated.');

process.exit(0);
